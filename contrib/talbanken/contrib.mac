# -*- cperl -*-

{
package Swedish_Treebank;

#binding-context Swedish_Treebank

BEGIN { import TredMacro; }
use strict;

sub detect {
  return (((PML::SchemaName()||'') eq 'talbanken') ? 1 : 0);
}

push @TredMacro::AUTO_CONTEXT_GUESSING, sub {
  my ($hook)=@_;
  my $resuming = ($hook eq 'file_resumed_hook');
  my $current = CurrentContext();
  if (detect()) {
    return __PACKAGE__;
  }
  return;
};

sub allow_switch_context_hook {
  return 'stop' unless detect();
}
sub switch_context_hook {
  if (GetCurrentStylesheet() eq STYLESHEET_FROM_FILE()) {
    SetCurrentStylesheet('Swedish_Treebank');
  }
  Redraw() if GUI();
}

sub get_nodelist_hook {
  my ($fsfile,$tree_no,$current,$showHidden)=@_;
  my $tree = $fsfile->tree($tree_no);
  my @nodes = $tree->descendants;
  my @terminals =
    sort { $a->{order} <=> $b->{order} }
    grep { $_->{'#name'} eq 'terminal' } @nodes;
  my %order; @order{@terminals}=(0..$#terminals);
  my @nonterminals = grep { $_->{'#name'} eq 'nonterminal' } @nodes;

  my %span;
  for my $node ($tree, reverse @nodes) {
    next unless $node->parent;
    my $is_terminal = $node->{'#name'} eq 'terminal' ? 1 : 0;
    if (! $is_terminal ) {
      $order{$node} = ($order{$span{$node}[1]}+$order{$span{$node}[0]})/2;
    }
    if (! $node->lbrother) {
      $span{$node->parent}[0] = $node; #$is_terminal ? $node : $span{$node}[0]
    }
    if (! $node->rbrother) {
      $span{$node->parent}[1] = $node; #$is_terminal ? $node : $span{$node}[1]
    }
  }

  return [[sort { $order{$a} <=> $order{$b} } ($tree,@nodes)], $current];
}

sub get_value_line_hook {
  my ($fsfile,$tree_no)=@_;
  my $tree = $fsfile->tree($tree_no);
  my @nodes = $tree->descendants; # skipping root
  my %ancestors;
  foreach my $n (@nodes) {
    my $p = $n->parent;
    $ancestors{$n} = $p==$tree ? [] : [ $p ,@{$ancestors{$p}} ];
  }
  my @return =
    map { ([ $_->{word}, $_, @{$ancestors{$_}} ], [" ","space"]) }
    sort { $a->{order} <=> $b->{order} }
    grep { $_->{'#name'} eq 'terminal' } @nodes;
  pop @return; # remove trailing space
  return \@return;
}

}
1;
